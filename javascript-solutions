1. https://www.codewars.com/kata/563f037412e5ada593000114/javascript

Solution:
---------

function calculateYears(principal, interest, tax, desired) {
  let year = 0, accruedAmount = principal;
  while(accruedAmount < desired) {
    let interestEarned = accruedAmount * interest;
    let taxDeduction = interestEarned * tax;
    accruedAmount += (interestEarned - taxDeduction);
    year++;
  }
  return year;
}

2. https://www.codewars.com/kata/578553c3a1b8d5c40300037c/javascript

Solution:
---------

const binaryArrayToNumber = arr => {
  let i, value = 0, multiplier = 1;
  for (let i = arr.length - 1; i >= 0; i--) {
    value += arr[i] * multiplier;
    multiplier *= 2;
  }
  return value;
};

3. https://www.codewars.com/kata/5b180e9fedaa564a7000009a/javascript

Solution:
---------

function solve(s){
  let i, lowercaseCount = 0;
  for(i = 0; i < s.length; i++) {
    lowercaseCount += (s.charAt(i) === s.charAt(i).toLowerCase()) ? 1 : 0;
  }
  return ((s.length - lowercaseCount) > lowercaseCount) ? s.toUpperCase() : s.toLowerCase();
}

4. https://www.codewars.com/kata/5266876b8f4bf2da9b000362/javascript

Solution:
---------

function likes(names) {
  if (names.length === 0) {
    return 'no one likes this';
  } else if (names.length === 1) {
    return `${names[0]} likes this`;
  } else if (names.length === 2) {
    return `${names[0]} and ${names[1]} like this`;
  } else if (names.length === 3) {
    return `${names[0]}, ${names[1]} and ${names[2]} like this`;
  } else {
    return `${names[0]}, ${names[1]} and ${names.length - 2} others like this`;
  }
}

5. https://www.codewars.com/kata/554a44516729e4d80b000012/javascript

Solution:
---------

function nbMonths(startPriceOld, startPriceNew, savingperMonth, percentLossByMonth){
  let i,month = 1, saved = 0;
  if (startPriceOld >= startPriceNew) {
    return [0, startPriceOld - startPriceNew]
  }
  while ((saved + startPriceOld) < startPriceNew) {
    startPriceOld -= startPriceOld * (percentLossByMonth/100);
    saved += savingperMonth;
    startPriceNew -= startPriceNew * (percentLossByMonth/100);
    month++;
    if(month/2 === 0) {
      percentLossByMonth += 0.5;
    }
  }
  return [month, saved - startPriceNew]; 
}

6. 

Solution:
---------

function solution(string) {  
  let result = "";
  for(s in string) {
    result += (string[s] === string[s].toUpperCase()) ? " " + string[s] : string[s];
  }
  return result;
}

7. 

Solution:
---------

function list(names){
  let returnString = '';
  for(let i = 0; i < names.length; i++) {
    if(i === 0) {
      returnString += names[i].name;
    } else if (i > 0 && (i != (names.length-1))) {
      returnString += `, ${names[i].name}`; 
    } else {
      returnString += ` & ${names[i].name}`;
    }
  }
  return returnString;
}
